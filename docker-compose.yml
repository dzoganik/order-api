version: "3.3"

networks:
  nginx-php81-mysql8:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "${NGINX_HOST_PORT}:80"
    volumes:
      - ./:/var/www/order-api
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php81
      - mysql8
    networks:
      - nginx-php81-mysql8

  php81:
    build:
      context: .
      dockerfile: ./.docker/php/Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www/order-api
      - ./.docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./.docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    depends_on:
      - mysql8
    networks:
      - nginx-php81-mysql8
    extra_hosts:
      - host.docker.internal:host-gateway

  mysql8:
    image: mysql:8
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ./.docker/mysql/data:/var/lib/mysql
      - ./.docker/mysql/init.sql:/data/application/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-file /data/application/init.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - nginx-php81-mysql8

  adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_HOST_PORT}:8080"
    networks:
      - nginx-php81-mysql8

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
